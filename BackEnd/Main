import re
import sys

from PyQt5.QtCore import QTime
from PyQt5.QtWidgets import QApplication, QMainWindow

from FrontEnd.UserInterface import Ui_MainWindow
import UIController as UIC


class Main(QMainWindow, Ui_MainWindow):
    def __init__(self, parent=None):
        # Set up User Interface
        QMainWindow.__init__(self, parent=parent)
        self.setupUi(self)

        UIC.startLogging()
        self.initialiseObject()

    # Initialise objects
    def initialiseObject(self):
        self.initialiseTabs()
        self.initialiseButtons()


    # Initialise tabs
    def initialiseTabs(self):
        self.tabWidget.currentChanged.connect(self.tabChanged)

    def initialiseButtons(self):
        # radio buttons
        self.radioDaily.clicked.connect(lambda: self.periodButtonChanged())
        self.radioWeekly.clicked.connect(lambda: self.periodButtonChanged())
        self.radioMonthly.clicked.connect(lambda: self.periodButtonChanged())
        # Combo box
        self.dropDownPeriod.currentTextChanged.connect(lambda: self.periodValue())
        # QTimeEdit
        self.timePeriod.timeChanged.connect(lambda: self.periodTimeChanged())

    # Get task type
    def tabChanged(self):
        if self.tabWidget.currentIndex() == 0:
            UIC.taskType = "CREATE"
            UIC.logger.info("CREATE Tab is selected.")
        elif self.tabWidget.currentIndex() == 1:
            UIC.taskType = "CHANGE"
            UIC.logger.info("UPDATE Tab is selected.")
        elif self.tabWidget.currentIndex() == 2:
            UIC.taskType = "DELETE"
            UIC.logger.info("DELETE Tab is selected.")

    # Get task period
    def periodButtonChanged(self):
        if self.radioDaily.isChecked():
            UIC.taskPeriod = "DAILY"
            self.dailyComboBox()
            UIC.logger.info("Daily Period is selected.")
        elif self.radioWeekly.isChecked():
            UIC.taskPeriod = "WEEKLY"
            self.weeklyComboBox()
            UIC.logger.info("Weekly Period is selected.")
        elif self.radioMonthly.isChecked():
            UIC.taskPeriod = "MONTHLY"
            self.monthlyComboBox()
            UIC.logger.info("Monthly Period is selected.")

    # Get daily drop down menu
    def dailyComboBox(self):
        self.dropDownPeriod.clear()
        self.dropDownPeriod.addItems(UIC.dailyList)

    # Get weekly drop down menu
    def weeklyComboBox(self):
        self.dropDownPeriod.clear()
        self.dropDownPeriod.addItems(UIC.weekList)

    # Get weekly drop down menu
    def monthlyComboBox(self):
        self.dropDownPeriod.clear()
        self.dropDownPeriod.addItems(UIC.monthList)

    # Get task period's day/date
    def periodValue(self):
        if self.radioDaily.isChecked():
            print(UIC.taskPeriod)
            pass
        elif self.radioWeekly.isChecked():
            if self.dropDownPeriod.currentIndex() != 0 and self.dropDownPeriod.currentIndex() != -1:
                UIC.taskPeriod = "WEEKLY"
                UIC.taskPeriod = UIC.taskPeriod + " /D " + self.dropDownPeriod.currentText()[:3]
                print(UIC.taskPeriod)
                UIC.logger.info("Day is selected.")
            else:
                pass
        elif self.radioMonthly.isChecked():
            if self.dropDownPeriod.currentIndex() != 0 and self.dropDownPeriod.currentIndex() != -1:
                UIC.taskPeriod = "MONTHLY"
                UIC.taskPeriod = UIC.taskPeriod + " /D " + str(re.search(r'\d+', self.dropDownPeriod.currentText()).group())
                print(UIC.taskPeriod)
                UIC.logger.info("Date is selected.")

    # Get time value
    def periodTimeChanged(self):
        UIC.taskTime = str(self.timePeriod.time().hour()) + ":" + str(self.timePeriod.time().minute())
        print(UIC.taskTime)
        UIC.logger.info("Time is selected/changed.")





if __name__ == '__main__':
    app = QApplication(sys.argv)
    app.setStyle("fusion")
    window = Main()
    window.show()

    sys.exit(app.exec())
